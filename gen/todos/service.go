// Code generated by goa v3.20.1, DO NOT EDIT.
//
// todos service
//
// Command:
// $ goa gen github.com/meier-christoph/todo-backend-golang-goa/design

package todos

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Service is the todos service interface.
type Service interface {
	// List implements list.
	List(context.Context) (res []*Todo, err error)
	// Create implements create.
	Create(context.Context, *TodoPayload) (res *Todo, err error)
	// Read implements read.
	Read(context.Context, *ReadPayload) (res *Todo, err error)
	// Update implements update.
	Update(context.Context, *UpdatePayload) (res *Todo, err error)
	// Delete implements delete.
	Delete(context.Context, *DeletePayload) (err error)
	// DeleteAll implements deleteAll.
	DeleteAll(context.Context) (err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "todo"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "todos"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [6]string{"list", "create", "read", "update", "delete", "deleteAll"}

// DeletePayload is the payload type of the todos service delete method.
type DeletePayload struct {
	ID string
}

// ReadPayload is the payload type of the todos service read method.
type ReadPayload struct {
	ID string
}

// Todo is the result type of the todos service create method.
type Todo struct {
	// Unique ID
	ID  int
	URL string
	// Title of the task
	Title *string
	// Order or priority of the task
	Order *int
	// Whether the task is completed or not
	Completed *bool
}

// TodoPayload is the payload type of the todos service create method.
type TodoPayload struct {
	// Title of the task
	Title *string
	// Order or priority of the task
	Order *int
	// Whether the task is completed or not
	Completed *bool
}

// UpdatePayload is the payload type of the todos service update method.
type UpdatePayload struct {
	ID string
	// Title of the task
	Title *string
	// Order or priority of the task
	Order *int
	// Whether the task is completed or not
	Completed *bool
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "BadRequest", false, false, false)
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "NotFound", false, false, false)
}
