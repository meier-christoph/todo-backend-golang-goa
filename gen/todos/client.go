// Code generated by goa v3.20.1, DO NOT EDIT.
//
// todos client
//
// Command:
// $ goa gen github.com/meier-christoph/todo-backend-golang-goa/design

package todos

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "todos" service client.
type Client struct {
	ListEndpoint      goa.Endpoint
	CreateEndpoint    goa.Endpoint
	ReadEndpoint      goa.Endpoint
	UpdateEndpoint    goa.Endpoint
	DeleteEndpoint    goa.Endpoint
	DeleteAllEndpoint goa.Endpoint
}

// NewClient initializes a "todos" service client given the endpoints.
func NewClient(list, create, read, update, delete_, deleteAll goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:      list,
		CreateEndpoint:    create,
		ReadEndpoint:      read,
		UpdateEndpoint:    update,
		DeleteEndpoint:    delete_,
		DeleteAllEndpoint: deleteAll,
	}
}

// List calls the "list" endpoint of the "todos" service.
// List may return the following errors:
//   - "BadRequest" (type *goa.ServiceError): Invalid user input.
//   - "NotFound" (type *goa.ServiceError): Todo not found.
//   - error: internal error
func (c *Client) List(ctx context.Context) (res []*Todo, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Todo), nil
}

// Create calls the "create" endpoint of the "todos" service.
// Create may return the following errors:
//   - "BadRequest" (type *goa.ServiceError): Invalid user input.
//   - "NotFound" (type *goa.ServiceError): Todo not found.
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *TodoPayload) (res *Todo, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}

// Read calls the "read" endpoint of the "todos" service.
// Read may return the following errors:
//   - "BadRequest" (type *goa.ServiceError): Invalid user input.
//   - "NotFound" (type *goa.ServiceError): Todo not found.
//   - error: internal error
func (c *Client) Read(ctx context.Context, p *ReadPayload) (res *Todo, err error) {
	var ires any
	ires, err = c.ReadEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}

// Update calls the "update" endpoint of the "todos" service.
// Update may return the following errors:
//   - "BadRequest" (type *goa.ServiceError): Invalid user input.
//   - "NotFound" (type *goa.ServiceError): Todo not found.
//   - error: internal error
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res *Todo, err error) {
	var ires any
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}

// Delete calls the "delete" endpoint of the "todos" service.
// Delete may return the following errors:
//   - "BadRequest" (type *goa.ServiceError): Invalid user input.
//   - "NotFound" (type *goa.ServiceError): Todo not found.
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}

// DeleteAll calls the "deleteAll" endpoint of the "todos" service.
// DeleteAll may return the following errors:
//   - "BadRequest" (type *goa.ServiceError): Invalid user input.
//   - "NotFound" (type *goa.ServiceError): Todo not found.
//   - error: internal error
func (c *Client) DeleteAll(ctx context.Context) (err error) {
	_, err = c.DeleteAllEndpoint(ctx, nil)
	return
}
